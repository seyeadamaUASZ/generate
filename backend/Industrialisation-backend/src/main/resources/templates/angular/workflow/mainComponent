import { Component, OnInit, ViewChild, AfterViewInit, QueryList, ViewChildren } from '@angular/core';
import { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { MatPaginator, MatTableDataSource, MatSort, MatDialog, MatSnackBar } from '@angular/material';
import { Add#ModuleComponent } from '../add-#module/add-#module.component';
import { View#ModuleComponent } from '../view-#module/view-#module.component';
import { #ModuleService } from '../../service/#module.service';
import { ConfirmDialogModel, ConfirmDialogComponent } from 'src/app/sharedcomponent/confirm-dialog/confirm-dialog.component';
import { TranslateService } from '@ngx-translate/core';
import { NotificationService } from '../../../shared/services/notification.service';
import * as fileSaver from 'file-saver';
import { merge, Observable } from 'rxjs';
#listeImports

@Component({
	selector: 'app-main-content',
	templateUrl: './main-content.component.html',
	styleUrls: ['./main-content.component.scss']
})
export class MainContentComponent implements AfterViewInit {
	@ViewChildren(MatPaginator) paginator: QueryList<MatPaginator> = new QueryList();
	@ViewChild(MatSort) sort: MatSort;
	form;
	result: any
	dataSource: MatTableDataSource<any>;
	dataSource2: MatTableDataSource<any>;
	dataSourceTraites: MatTableDataSource<any>;
	profilLibelle = localStorage.getItem('profileLibelle');

	task: any = []
	status: any
	
	columnDefinitions=[#columnDefinitions];
    selectedColumns = this.columnDefinitions;
    getDisplayedColumns(){
    	return this.selectedColumns;
    }
	constructor(private #moduleService: #ModuleService,
		private dialogRef: MatDialog,
		private route: ActivatedRoute,
		private formBuilder: FormBuilder,
		private translate: TranslateService,
		private notification: NotificationService,
		private router: Router) {
	}

	
	#mainFunctions

	#listetraitementFunctions
	
	
	
	
	

	

	
	
}
