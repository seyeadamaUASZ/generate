package sn.gainde2000.pi.integration.signature.confiancefactory.wsdl_rasign;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.2
 * 2020-04-08T19:13:08.926Z
 * Generated source version: 3.0.2
 * 
 */
@WebServiceClient(name = "RA_Sign", 
                  wsdlLocation = "classpath:gainde2000/services/RA_SIGNWSDL.wsdl",
                  targetNamespace = "http://www.confiancefactory.com/WSDL_RASign/") 
public class RASign extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.confiancefactory.com/WSDL_RASign/", "RA_Sign");
    public final static QName IRegistSignPort = new QName("http://www.confiancefactory.com/WSDL_RASign/", "IRegistSignPort");
    static {
        URL url = RASign.class.getClassLoader().getResource("gainde2000/services/RA_SIGNWSDL.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(RASign.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:gainde2000/services/RA_SIGNWSDL.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public RASign(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RASign(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RASign() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public RASign(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public RASign(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public RASign(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns IRegistSignPort
     */
    @WebEndpoint(name = "IRegistSignPort")
    public IRegistSignPort getIRegistSignPort() {
        return super.getPort(IRegistSignPort, IRegistSignPort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IRegistSignPort
     */
    @WebEndpoint(name = "IRegistSignPort")
    public IRegistSignPort getIRegistSignPort(WebServiceFeature... features) {
        return super.getPort(IRegistSignPort, IRegistSignPort.class, features);
    }

}
